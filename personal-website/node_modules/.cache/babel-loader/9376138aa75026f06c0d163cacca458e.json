{"ast":null,"code":"var _jsxFileName = \"/Users/sankalpsaini/Developer/VisualStudioCode/Personal Website/personal-website/src/pages/Compiler.js\";\nimport React, { Component } from \"react\";\nimport \"./Compiler.css\";\nimport Navbar from \"../components/Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Compiler extends Component {\n  constructor(props) {\n    super(props);\n\n    this.input = event => {\n      event.preventDefault();\n      this.setState({\n        input: event.target.value\n      });\n      localStorage.setItem('input', event.target.value);\n    };\n\n    this.userInput = event => {\n      event.preventDefault();\n      this.setState({\n        user_input: event.target.value\n      });\n    };\n\n    this.language = event => {\n      event.preventDefault();\n      this.setState({\n        language_id: event.target.value\n      });\n      localStorage.setItem('language_Id', event.target.value);\n    };\n\n    this.submit = async e => {\n      e.preventDefault();\n      let outputText = document.getElementById(\"output\");\n      outputText.innerHTML = \"\";\n      outputText.innerHTML += \"Creating Submission ...\\n\";\n      const response = await fetch(\"https://judge0-ce.p.rapidapi.com/submissions\", {\n        method: \"POST\",\n        headers: {\n          \"x-rapidapi-host\": \"judge0-ce.p.rapidapi.com\",\n          \"x-rapidapi-key\": \"\",\n          // Get yours for free at https://rapidapi.com/judge0-official/api/judge0-ce/\n          \"content-type\": \"application/json\",\n          accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          source_code: this.state.input,\n          stdin: this.state.user_input,\n          language_id: this.state.language_id\n        })\n      });\n      outputText.innerHTML += \"Submission Created ...\\n\";\n      const jsonResponse = await response.json();\n      let jsonGetSolution = {\n        status: {\n          description: \"Queue\"\n        },\n        stderr: null,\n        compile_output: null\n      };\n\n      while (jsonGetSolution.status.description !== \"Accepted\" && jsonGetSolution.stderr == null && jsonGetSolution.compile_output == null) {\n        outputText.innerHTML = `Creating Submission ... \\nSubmission Created ...\\nChecking Submission Status\\nstatus : ${jsonGetSolution.status.description}`;\n\n        if (jsonResponse.token) {\n          let url = `https://judge0-ce.p.rapidapi.com/submissions/${jsonResponse.token}?base64_encoded=true`;\n          const getSolution = await fetch(url, {\n            method: \"GET\",\n            headers: {\n              \"x-rapidapi-host\": \"judge0-ce.p.rapidapi.com\",\n              \"x-rapidapi-key\": \"\",\n              // Get yours for free at https://rapidapi.com/judge0-official/api/judge0-ce/\n              \"content-type\": \"application/json\"\n            }\n          });\n          jsonGetSolution = await getSolution.json();\n        }\n      }\n\n      if (jsonGetSolution.stdout) {\n        const output = atob(jsonGetSolution.stdout);\n        outputText.innerHTML = \"\";\n        outputText.innerHTML += `Results :\\n${output}\\nExecution Time : ${jsonGetSolution.time} Secs\\nMemory used : ${jsonGetSolution.memory} bytes`;\n      } else if (jsonGetSolution.stderr) {\n        const error = atob(jsonGetSolution.stderr);\n        outputText.innerHTML = \"\";\n        outputText.innerHTML += `\\n Error :${error}`;\n      } else {\n        const compilation_error = atob(jsonGetSolution.compile_output);\n        outputText.innerHTML = \"\";\n        outputText.innerHTML += `\\n Error :${compilation_error}`;\n      }\n    };\n\n    this.state = {\n      input: localStorage.getItem('input') || ``,\n      output: ``,\n      language_id: localStorage.getItem('language_Id') || 2,\n      user_input: ``\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-400 bg-background_about body-font\",\n        children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n        className: \"py-100\",\n        src: \"https://trinket.io/embed/python/65ec0624f6\",\n        width: \"100%\",\n        height: \"356\",\n        frameborder: \"0\",\n        marginwidth: \"0\",\n        marginheight: \"0\",\n        allowfullscreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/sankalpsaini/Developer/VisualStudioCode/Personal Website/personal-website/src/pages/Compiler.js"],"names":["React","Component","Navbar","Compiler","constructor","props","input","event","preventDefault","setState","target","value","localStorage","setItem","userInput","user_input","language","language_id","submit","e","outputText","document","getElementById","innerHTML","response","fetch","method","headers","accept","body","JSON","stringify","source_code","state","stdin","jsonResponse","json","jsonGetSolution","status","description","stderr","compile_output","token","url","getSolution","stdout","output","atob","time","memory","error","compilation_error","getItem","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Compiler.css\";\nimport Navbar from \"../components/Navbar\";\n\nexport default class Compiler extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        input: localStorage.getItem('input')||``,\n        output: ``,\n        language_id:localStorage.getItem('language_Id')|| 2,\n        user_input: ``,\n        };\n    }\n    input = (event) => { \n        event.preventDefault();\n        this.setState({ input: event.target.value });\n        localStorage.setItem('input', event.target.value) \n    };\n  \n    userInput = (event) => {\n        event.preventDefault();\n        this.setState({ user_input: event.target.value });\n    };\n  \n    language = (event) => {  \n        event.preventDefault();\n        this.setState({ language_id: event.target.value });\n        localStorage.setItem('language_Id',event.target.value)\n    };\n  \n    submit = async (e) => {\n        e.preventDefault();\n        let outputText = document.getElementById(\"output\");\n        outputText.innerHTML = \"\";\n        outputText.innerHTML += \"Creating Submission ...\\n\";\n        const response = await fetch(\n        \"https://judge0-ce.p.rapidapi.com/submissions\",\n        {\n            method: \"POST\",\n            headers: {\n            \"x-rapidapi-host\": \"judge0-ce.p.rapidapi.com\",\n            \"x-rapidapi-key\": \"\", // Get yours for free at https://rapidapi.com/judge0-official/api/judge0-ce/\n            \"content-type\": \"application/json\",\n            accept: \"application/json\",\n            },\n            body: JSON.stringify({\n            source_code: this.state.input,\n            stdin: this.state.user_input,\n            language_id: this.state.language_id,\n            }),\n        });\n    \n        outputText.innerHTML += \"Submission Created ...\\n\";\n        const jsonResponse = await response.json();\n        let jsonGetSolution = {\n        status: { description: \"Queue\" },\n        stderr: null,\n        compile_output: null,\n        };\n        while (\n        jsonGetSolution.status.description !== \"Accepted\" &&\n        jsonGetSolution.stderr == null &&\n        jsonGetSolution.compile_output == null\n        ) {\n        outputText.innerHTML = `Creating Submission ... \\nSubmission Created ...\\nChecking Submission Status\\nstatus : ${jsonGetSolution.status.description}`;\n        if (jsonResponse.token) {\n            let url = `https://judge0-ce.p.rapidapi.com/submissions/${jsonResponse.token}?base64_encoded=true`;\n            const getSolution = await fetch(url, {\n            method: \"GET\",\n            headers: {\n                \"x-rapidapi-host\": \"judge0-ce.p.rapidapi.com\",\n                \"x-rapidapi-key\": \"\", // Get yours for free at https://rapidapi.com/judge0-official/api/judge0-ce/\n                \"content-type\": \"application/json\",\n            },\n            });\n            jsonGetSolution = await getSolution.json();\n        }}\n    \n        if (jsonGetSolution.stdout) {\n        const output = atob(jsonGetSolution.stdout);\n        outputText.innerHTML = \"\";\n        outputText.innerHTML += `Results :\\n${output}\\nExecution Time : ${jsonGetSolution.time} Secs\\nMemory used : ${jsonGetSolution.memory} bytes`;\n        } else if (jsonGetSolution.stderr) {\n        const error = atob(jsonGetSolution.stderr);\n        outputText.innerHTML = \"\";\n        outputText.innerHTML += `\\n Error :${error}`;\n        } else {\n        const compilation_error = atob(jsonGetSolution.compile_output);\n        outputText.innerHTML = \"\";\n        outputText.innerHTML += `\\n Error :${compilation_error}`;\n        }\n    };\n  \n    render() { \n        return (\n        <>\n            <div className=\"text-gray-400 bg-background_about body-font\">\n                <Navbar />\n            </div>\n\n            <iframe \n                className=\"py-100\"\n                src=\"https://trinket.io/embed/python/65ec0624f6\" \n                width=\"100%\" \n                height=\"356\" \n                frameborder=\"0\" \n                marginwidth=\"0\" \n                marginheight=\"0\" \n                allowfullscreen\n            />\n\n            {/* <div className=\"row container-fluid\">\n            <div className=\"col-6 ml-4 \">\n                <label htmlFor=\"solution \">\n                <span className=\"badge badge-info heading mt-2 \">\n                    <i className=\"fas fa-code fa-fw fa-lg\"></i> Code Here\n                </span>\n                </label>\n                <textarea\n                required\n                name=\"solution\"\n                id=\"source\"\n                onChange={this.input}\n                className=\" source\"\n                value={this.state.input}\n                ></textarea>\n                <button\n                type=\"submit\"\n                className=\"btn btn-danger ml-2 mr-2 \"\n                onClick={this.submit}\n                >\n                <i className=\"fas fa-cog fa-fw\"></i> Run\n                </button>\n\n                <label htmlFor=\"tags\" className=\"mr-1\">\n                <b className=\"heading\">Language:</b>\n                </label>\n                <select\n                value={this.state.language_id}\n                onChange={this.language}\n                id=\"tags\"\n                className=\"form-control form-inline mb-2 language\"\n                >\n                <option value=\"54\">C++</option>\n                <option value=\"50\">C</option>\n                <option value=\"62\">Java</option>\n                <option value=\"71\">Python</option>\n                </select>\n            </div>\n            <div className=\"col-5\">\n                <div>\n                <span className=\"badge badge-info heading my-2 \">\n                    <i className=\"fas fa-exclamation fa-fw fa-md\"></i> Output\n                </span>\n                <textarea id=\"output\"></textarea>\n                </div>\n            </div>\n            </div>\n            <div className=\"mt-2 ml-5\">\n            <span className=\"badge badge-primary heading my-2 \">\n                <i className=\"fas fa-user fa-fw fa-md\"></i> User Input\n            </span>\n            <br />\n            <textarea id=\"input\" onChange={this.userInput}></textarea>\n            </div> */}\n        </>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}